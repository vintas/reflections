What happens when you initialize a repository? Why do you need to do it?
    It creates the .git folder whiich identifies that the directory is  repository and also allocates the space where revision history is stored.
    hgb

How is the staging area different from the working directory and the repository?
What value do you think it offers?
    Staging area looks like an intermediate step. I have yet to figure any value to it.

How can you use the staging area to make sure you have one commit per logical
change?
	I can make bug fixes to all my files at once and then register the changes as indiviual commits.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Any new feature feels like an expiremental feature to me. So, yes, branches do seem immensely useful.
	But knowing that I have to merge the changes later does make me question my first thought. 

How do the diagrams help you visualize the branch structure?
	The diagrams from Git don't seem to look as good.
	The fact that commits may get forgotten seems like a bad idea. These aren't shown in the diagram.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	Merging feels dodgy. My ship colour turned to yellow too.
	OK. The ship turning yellow was my fault. I fixed it in the next commit.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
	The good boy in me says to have manual merge all the time but I can see how that will be impractially time-consuming and headache inducing.